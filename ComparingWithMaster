Sub fuckfuckfuckfuck()

' This file is used to compare MASTER vs ITEMin
    ' Left Blank, File Date, Email Receipients
' Log out the differences
' Ex: Wrong file name, missing data in a column(s).

' create system objects for file handling
Set objExcel = CreateObject("Excel.Application")
Set objExcel2 = CreateObject("Excel.Application")

' Log file stuffs - Initially create/clear it
Set objOutput = CreateObject("Scripting.FileSystemObject") ' changed from objFTPOutput to objOutput
logFileName = "C:\Users\ekim\Desktop\Projects\hello\full.log"
Set logFile = objOutput.CreateTextFile(logFileName, True)
logFile.Write "Datetime of Log Creation: " & Now() & vbCrLf
logFile.Write "-------------------------------------------------------------" & vbCrLf

' path to the excel file
Set objWorkbook = objExcel.Workbooks.Open _
("C:\Users\ekim\Desktop\Projects\hello\ITEMin000.xlsx")

Set objWorkbook2 = objExcel2.Workbooks.Open _
("C:\Users\ekim\Desktop\Projects\hello\MASTER000.xlsx")


' start at the second row, ie, not the column header
intRow = 2

' Below for analysis purpose
intSucess = 0

' loop through each row of the excel file
Do Until objExcel.Cells(intRow, 1).Value = ""
    
' grab the rest of the excel file information
' If the first cell is blank exit the program (SHM)
client = Trim(objExcel.Cells(intRow, 1).Value)
If client = "" Then
    ''''exit do
End If

' Fetch the data to compare it with Master later
file_date = Trim(objExcel.Cells(intRow, 10).Value)
file_left = Trim(objExcel.Cells(intRow, 14).Value)
send_to = Trim(objExcel.Cells(intRow, 1).Value)
email_to = Trim(objExcel.Cells(intRow, 2).Value)
email_cc = Trim(objExcel.Cells(intRow, 3).Value)
email_bcc = Trim(objExcel.Cells(intRow, 4).Value)
file_fullname = Trim(objExcel.Cells(intRow, 9).Value)



Dim dataFound As Boolean
dataFound = False
Dim logFlags As String

' loop against the MASTER file
'''''''''''''' ISSUEEEEEEEEEE: Only gets call for first outer loop
For Each sh In objWorkbook2.Worksheets
    
    If sh.Index = 1 Then GoTo NextIteration

    logFlags = "000000" ' 1 send_to, 1 file_date, 1 file_left, 3 emails


    For Each rw In sh.Rows
        Dim keepSearching As Boolean
        keepSearching = False
                
        ' Check further comparison if send_to data matches
        If send_to = rw.Cells(1).Value Then
            
            ' Since we confirmd send_to matches, set logFlags to '10000'
            
            
            ' Fetch the data to compare it with Master later
            file_date2 = rw.Cells(10).Value
            file_left2 = rw.Cells(14).Value
            email_to2 = rw.Cells(2).Value
            email_cc2 = rw.Cells(3).Value
            email_bcc2 = rw.Cells(4).Value
            
            logFile.Write "Processing " & send_to & " - " & file_fullname & "    " & sh.Name & "  (" & rw.Row & ")  " & vbCrLf

            ' Below checks for any failure/unmatched. If so, log this bad boys
            If file_date <> file_date2 Then
                keepSearching = True
                logFile.Write "   File date is not matching..." & vbCrLf
            End If
            If file_left <> file_left2 Then keepSearching = True: logFile.Write "   File prefix name is not matching..." & vbCrLf
            If email_to <> email_to2 Then keepSearching = True: logFile.Write "   Email Receipient is not matching..." & vbCrLf
            If email_cc <> email_cc2 Then keepSearching = True: logFile.Write "   CC info is not matching..." & vbCrLf
            If email_bcc <> email_bcc2 Then keepSearching = True: logFile.Write "   BCC info is not matching..." & vbCrLf

            
            
            ' Below checks if a correct record is found in MASTER. If so, log this good too
            If keepSearching = False Then dataFound = True
            If dataFound = True Then
                logFile.Write "Success! " & file_fullname & " in " & sh.Name & vbCrLf & _
                    " Found in " & sh.Name & " sheet in Row " & CStr(rw.Row) & vbCrLf & _
                    "   Send To: " & send_to & vbCrLf & _
                    "   Email To: " & email_to & vbCrLf & _
                    "   Email BCC: " & email_bcc & vbCrLf & _
                    "   File Left: " & file_left & vbCrLf & vbCrLf
                intSuccess = intSuccess + 1
                Exit For
            End If
            
            logFile.Write vbCrLf
            
        End If
        
        If rw.Row >= 200 Then
            '''''MsgBox "200 reached" + CStr(goNextSheet) + "  " + CStr(dataFound)
            Exit For
        End If
    Next rw
    

NextIteration:
    ' If the matching record is found in MASTER, then we just move to next item in ITEMin file.
    If dataFound = True Then
        Exit For
    End If
Next sh

intRow = intRow + 1
Loop


' We subtract 2 because intRow is initally 2
MsgBox "Total Record: " & CStr(intRow - 2) & vbCrLf & _
       "Success: " & CStr(intSuccess) & vbCrLf & _
       "Failure: " & CStr(intRow - 2 - intSuccess)


objWorkbook.Close
objExcel.Quit
objWorkbook2.Close
objExcel2.Quit

End Sub


' This one simply update the MS Word file
Function updateDateWord(fDegrees)
    ' I will need following 3:
        ' Applicable Word file Location and Name
        ' Updated date from ITEMin file
    
' Open the ITEMin Excel file to fetch the updated Date
Set objExcel = CreateObject("Excel.Application")
Set objWorkbook = objExcel.Workbooks.Open _
("C:\Users\ekim\Desktop\Projects\hello\ITEMin000.xlsx")

new_file_date = Trim(objExcel.Cells(intRow, 10).Value)
customerdata_form = Trim(objExcel.Cells(intRow, 24).Value)


new_formname = customerdata_form + new_file_date

'Below is the location/file_left of the file to be updated
'J:\Sales\Public\Catalog Tools\frank\Customer Data Files\Brake Booster\WHI\Data\REMANUFACTURED POWER BRAKE BOOSTERS_RPB_WHI DSF-Motorcar Parts of America_Brake Boosters_



' Open the applicable Word document
Dim wdApp As Object, wdDoc As Object
Set wdApp = CreateObject("word.application")
Set wdDoc = wdApp.Documents.Open()
wdDoc.Visible = True

End Function


