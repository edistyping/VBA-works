Sub updateDateWord()

' This one simply update dates in the MS Word title and also the file
    ' I will need following 3:
        ' Applicable Word file Location and Name
        ' Updated date from ITEMin file
    
' Open the ITEMin Excel file to fetch the updated Date
Set objExcel = CreateObject("Excel.Application")
Set objWorkbook = objExcel.Workbooks.Open("C:\Users\ekim\Desktop\Projects\hello\ITEMin000.xlsx")

Const MAIN_PATH As String = "C:\Users\ekim\Desktop\Projects\hello\Customer Data File\Test\"

new_fileDate = Trim(objExcel.Cells(2, 10).Value) ' I think we can just get from the first record
file_left = Trim(objExcel.Cells(2, 24).Value)
new_fileName = file_left + new_fileDate + ".docx" ' This should be the new file name

'MsgBox "Just fyi: " & new_fileDate & vbCrLf & vbCrLf & _
       "File Left: " & file_left & vbCrLf & vbCrLf & _
       "New: " & new_fileName

' Using substring of the title (file_left) to correctly locate the file from its directory
Dim file As String
Dim fileTemp As String
'MsgBox "ha: " & MAIN_PATH & " ||| " & file_left & "!!!"
file = Dir$(file_left & "*" & ".*")
If (Len(file) > 0) Then
    fileTemp = file
    MsgBox "Found: " & fileTemp
Else
    MsgBox "File Doesn't Exist!"
End If


' Open the Word document
Dim wdApp As Object, wdDoc As Object
Set wdApp = CreateObject("Word.Application")
Set wdDoc = wdApp.Documents.Open(MAIN_PATH + fileTemp) '("C:\Users\ekim\Desktop\Projects\hello\testbaby.docx")
wdApp.Visible = True

With wdApp.ActiveDocument.Content.Find ' Note: Saw some people using Content instead of Range
    .ClearFormatting ' Clear any existing value for Find dialog box
    .Replacement.ClearFormatting ' Clear any existing value
    '.Text = "([0-9]{4})[-]([0-9]{1,2})[-]([0-9]{1,2})"
    .Text = "testbaby"
    .MatchWildcards = True
    .Replacement.Text = new_fileDate ' Change .Text to what's provided here
    .Execute Replace:=2 ' Apply for Replace All
End With
 

'!!!! After above, change the filename with the updated date
'1) Store the full path of the document in a string: oldfile = ActiveDocument.FullName
    ' Can either fetch the file using a substring in the directory (Column X; datafile_left)
    ' Or grab the file using Master Excel file.

'2) SaveAs the document with ActiveDocument.SaveAs


'3) Delete the old file with Kill oldfile




' Close files
'wdApp.ActiveDocument.Close SaveChanges:=True
objWorkbook.Close
objExcel.Quit

End Sub


